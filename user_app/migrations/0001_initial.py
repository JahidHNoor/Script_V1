# Generated by Django 5.0.1 on 2024-02-12 10:47

import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Blocked_ip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.CharField(blank=True, max_length=100, null=True)),
                ('block_reason', models.CharField(default='Blocked by Admin.', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feature_name', models.CharField(default='Name of feature. Must be in lowercase.', max_length=100)),
                ('feature_title', models.CharField(default='Title of feature. It will shown in Home features.', max_length=100)),
                ('feature_description', models.TextField(default='Write your Feature description here. It will be shown on the HomePage.')),
                ('feature_icon', models.CharField(default='Icon of the feature.', max_length=100)),
                ('is_on', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Rps_history',
            fields=[
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('user_uid', models.CharField(blank=True, max_length=100, null=True)),
                ('rps_claim_time', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tic_tac_toe_history',
            fields=[
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('user_uid', models.CharField(blank=True, max_length=100, null=True)),
                ('opponent_uid', models.CharField(blank=True, max_length=100, null=True)),
                ('match_status', models.CharField(blank=True, max_length=100, null=True)),
                ('tic_tac_toe_match_time', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
